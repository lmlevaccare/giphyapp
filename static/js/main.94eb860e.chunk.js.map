{"version":3,"sources":["components/SearchForm.js","components/ResultList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","onClick","useState","search","setSearch","searchList","setSearchList","console","log","onSubmit","event","preventDefault","placeholder","type","value","onChange","searchItem","target","ResultList","urlData","map","data","href","App","copyData","setCopyData","urlDataState","setUrlData","useEffect","a","fetch","process","response","json","fetchData","newData","index","url","className","showFive","onDoubleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQACe,SAASA,EAAT,GAAgC,IAAXC,EAAU,EAAVA,QAAU,EACdC,mBAAS,IADK,mBACnCC,EADmC,KAC3BC,EAD2B,OAENF,mBAAS,IAFH,mBAEnCG,EAFmC,KAEvBC,EAFuB,KAc1C,OADAC,QAAQC,IAAI,aAAcH,GAEtB,8BACI,uBAAMI,SARO,SAACC,GAClBA,EAAMC,iBACNL,EAAcH,IAMoBF,QAASA,EAAvC,UACI,uBACIW,YAAY,eACZC,KAAK,OACLC,MAAOX,EACPY,SAlBK,SAACL,GAClB,IAAMM,EAAaN,EAAMO,OAAOH,MAEhCV,EAAUY,MAgBF,uBAAOH,KAAK,SAASC,MAAM,gBCtB5B,SAASI,EAAT,GAAiC,IAAXC,EAAU,EAAVA,QAGnC,OADAZ,QAAQC,IAAI,aAAcW,GAExB,8BAMOA,EAAQC,KAAI,SAACC,GAAD,OACf,6BAAI,mBAAGC,KAAMD,EAAT,wBAAoBA,UCyDjBE,MA9Df,WACE,IADa,EAEWrB,mBAAS,IAFpB,gCAGmBA,mBAAS,KAH5B,mBAGNsB,EAHM,KAGIC,EAHJ,OAIsBvB,mBAAS,IAJ/B,mBAINwB,EAJM,KAIQC,EAJR,KAKbC,qBAAU,WACRrB,QAAQC,IAAI,aACG,uCAAG,8BAAAqB,EAAA,+EAESC,MAAM,kDAAD,OARnBC,mCAQmB,uBAFd,cAERC,EAFQ,gBAKKA,EAASC,OALd,OAKRZ,EALQ,OAMdd,QAAQC,IAAI,aAAca,GAC1BI,EAAY,GAAD,mBAAKD,GAAL,CAAeH,KAPZ,kDAUdd,QAAQC,IAAR,MAVc,0DAAH,oDAcf0B,KAEC,IACHN,qBAAU,kBAAMrB,QAAQC,IAAI,aAAcgB,MAC1C,IAAMvB,EAAU,SAACS,GACf,IAAIyB,EAAU,GACdzB,EAAMC,iBAEN,IAAMQ,GADNgB,EAAUX,EAAS,GAAGH,MACED,KAAI,SAACgB,GAAD,OAAWA,EAAMC,OAC7C9B,QAAQC,IAAI,MAAOW,GACnBQ,EAAWR,GACXZ,QAAQC,IAAI,UAAW2B,IAYzB,OACE,sBAAKG,UAAU,MAAf,UACE,mDACA,mEACA,4BACE,wBAAQC,SAbG,SAAXA,EAAY7B,GACfA,EAAMC,iBACPJ,QAAQC,IAAI,UAAU+B,IAWlB,+BAEF,4BACE,wBAAQtC,QAASA,EAAjB,gCAEF,4BACE,wBAAQA,QAASA,EAASuC,cAdb,WACjBb,EAAW,KAaP,gCAEF,cAAC,EAAD,IACA,cAACT,EAAD,CAAYC,QAASO,QCrDZe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94eb860e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nexport default function SearchForm({onClick}) {\n    const [search, setSearch] = useState(\"\")\n    const [searchList, setSearchList] = useState(\"\")\n    const handleChange = (event) => {\n        const searchItem = event.target.value\n        // console.log('search', searchItem)\n        setSearch(searchItem)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        setSearchList(search)\n    }\n  \n    console.log('searchlist', searchList)\n    return (\n        <div>\n            <form onSubmit={handleSubmit} onClick={onClick} >\n                <input\n                    placeholder=\"search giphy\"\n                    type=\"text\"\n                    value={search}\n                    onChange={handleChange} />\n                <input type=\"submit\" value=\"Submit\" />\n                {/* <input type=\"submit\" value={data} /> */}\n            </form>\n        \n        </div>\n    )\n}","import React from \"react\";\nexport default function ResultList({ urlData}) {\n  // const urlfifteen = urlData.slice(0, 15);\n  console.log(\"resultlist\", urlData);\n  return (\n    <div>\n          {/* {urlfive.map((data) => (\n        <a href={data} key={data}>\n          5Links\n        </a>\n      ))} */}\n          {urlData.map((data) => (\n        <ul><a href={data} key={data}>\n              Giffy Links\n        </a></ul>\n      ))}\n      {/* {urlfifteen.map((data) => (\n        <a href={data} key={data}>\n          15Links\n        </a>\n      ))} */}\n    </div>\n  );\n}","\n// `https://api.giphy.com/v1/gifs/search?q=${searchTermA}&${searchTermB}&api_key=${apiKey}=25&rating=g`\nimport \"./App.css\";\n// import \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport SearchFrom from \"./components/SearchForm\";\nimport ResultList from \"./components/ResultList\";\nfunction App() {\n  const apiKey = process.env.REACT_APP_GIPHY_API_KEY;\n  const [data, setData] = useState({});\n  const [copyData, setCopyData] = useState([]);\n  const [urlDataState, setUrlData] = useState([]);\n  useEffect(() => {\n    console.log(\"useEffect\");\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          `https://api.giphy.com/v1/gifs/trending?api_key=${apiKey}&limit=25&rating=g`\n        );\n        const data = await response.json();\n        console.log(\"dataObject\", data);\n        setCopyData([...copyData, data]);\n        //  console.log(\"copy\",copyData)\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    // need to invoke function\n    fetchData();\n    // dependecy array  need to add this!!!! execute this once do not keep calling the api key on a loop\n  }, []);\n  useEffect(() => console.log(\"dataEffect\", copyData));\n  const onClick = (event) => {\n    var newData = [];\n    event.preventDefault();\n    newData = copyData[0].data;\n    const urlData = newData.map((index) => index.url);\n    console.log(\"url\", urlData);\n    setUrlData(urlData);\n    console.log(\"newData\", newData);\n    //  console.log(\"map\",giphys)\n  };\n\n  const showFive = (event) => {\n     event.preventDefault();\n    console.log(\"newfIVE\",showFive)\n  }\n\n  const clearGiphy = () => {\n    setUrlData([])\n  }\n  return (\n    <div className=\"App\">\n      <h4>Lets Find Giphys </h4>\n      <h6>Double Click to Clear Giphy List </h6>\n      <p>\n        <button showFive={showFive}>Search 5 Giphys</button>\n      </p>\n      <p>\n        <button onClick={onClick}>Search 15 Giphys</button>\n      </p>\n      <p>\n        <button onClick={onClick} onDoubleClick={clearGiphy}>Search 25 Giphys</button>\n      </p>\n      <SearchFrom />\n      <ResultList urlData={urlDataState} />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}